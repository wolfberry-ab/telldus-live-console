name: Release Pipeline

on:
  push:
    tags:
      - 'v*.*.*'

defaults:
  run:
    shell: bash
    working-directory: ./Wolfberry.TelldusLive.Console

jobs:
  build-job:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.vars.outputs.release_version }}
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0

    - name: Setup .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Set release version
      id: vars
      run: echo ::set-output name=release_version::$(echo ${GITHUB_REF#refs/*/} | sed -e "s/v//gI")

    - name: Build Debug
      run: dotnet build --no-restore --configuration Debug

    - name: Test & Coverage
      run: dotnet test --no-build --verbosity normal --framework net5.0 /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov

    - name: Build Release
      run: dotnet build --no-restore --configuration Release

    - name: Create NuGet
      run: dotnet pack -p:PackageVersion=${{ steps.vars.outputs.release_version }} -c Release -o out

    - name: Publish artifact
      uses: actions/upload-artifact@v2
      with:
        name: drop
        path: 'Wolfberry.TelldusLive.Console/out'

  deploy-job:
    runs-on: ubuntu-latest
    needs: build-job
    environment: tdlive-prod

    steps:

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: drop
          path: './out'

      - name: Setup .NET 5
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Upload NuGet for test
        uses: Azure/cli@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az storage blob upload --account-name sttellduscicd --container-name artifacts --file out/tdlive.${{ needs.build-job.outputs.release_version }}.nupkg --name tdlive.${{ needs.build-job.outputs.release_version }}.nupkg --sas-token "${{secrets.AZ_ARTIFACT_SAS_TOKEN}}"
            pwd && ls -al out/*

      - name: PushNuget
        working-directory: ./out
        run: dotnet nuget push tdlive.${{ needs.build-job.outputs.release_version }}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate
